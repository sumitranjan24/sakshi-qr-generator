<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QR Code Generator</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrious/4.0.2/qrious.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            text-align: center;
            max-width: 500px;
            width: 100%;
            transition: transform 0.3s ease;
        }

        .container:hover {
            transform: translateY(-5px);
        }

        .header {
            margin-bottom: 30px;
        }

        h1 {
            color: #333;
            font-size: 2.5rem;
            margin-bottom: 10px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .subtitle {
            color: #666;
            font-size: 1.1rem;
            margin-bottom: 5px;
        }

        .credit {
            color: #888;
            font-size: 0.9rem;
            font-weight: 600;
            margin-bottom: 30px;
        }

        .input-group {
            margin-bottom: 30px;
        }

        .url-input {
            width: 100%;
            padding: 15px;
            border: 2px solid #e1e5e9;
            border-radius: 12px;
            font-size: 1rem;
            outline: none;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.8);
        }

        .url-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        .generate-btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 15px 40px;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-top: 15px;
        }

        .generate-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }

        .generate-btn:active {
            transform: translateY(-1px);
        }

        .qr-container {
            margin-top: 30px;
            opacity: 0;
            transform: translateY(20px);
            transition: all 0.5s ease;
        }

        .qr-container.show {
            opacity: 1;
            transform: translateY(0);
        }

        .qr-code {
            background: white;
            padding: 20px;
            border-radius: 15px;
            display: inline-block;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        .download-btn {
            background: #28a745;
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 0 10px;
        }

        .download-btn:hover {
            background: #218838;
            transform: translateY(-2px);
        }

        .error {
            color: #dc3545;
            margin-top: 10px;
            font-weight: 500;
        }

        .success {
            color: #28a745;
            margin-top: 10px;
            font-weight: 500;
        }

        @media (max-width: 600px) {
            .container {
                padding: 30px 20px;
            }
            
            h1 {
                font-size: 2rem;
            }
            
            .generate-btn {
                width: 100%;
            }
        }

        .pulse {
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>ðŸ”— QR Generator Built by Sakshi</h1>
            <p class="subtitle">Transform any URL into a scannable QR code</p>
        </div>

        <div class="input-group">
            <input 
                type="url" 
                class="url-input" 
                id="urlInput" 
                placeholder="Enter your URL here (e.g., https://example.com)"
                autocomplete="url"
            >
            <button class="generate-btn" onclick="generateQR()">
                âœ¨ Generate QR Code
            </button>
        </div>

        <div id="message"></div>

        <div class="qr-container" id="qrContainer">
            <div class="qr-code">
                <canvas id="qrCanvas"></canvas>
            </div>
            <div>
                <button class="download-btn" onclick="downloadQR()">ðŸ“¥ Download PNG</button>
                <button class="download-btn" onclick="copyQR()">ðŸ“‹ Copy Image</button>
            </div>
        </div>
    </div>

    <script>
        let currentQR = null;

        function generateQR() {
            const urlInput = document.getElementById('urlInput');
            const qrContainer = document.getElementById('qrContainer');
            const canvas = document.getElementById('qrCanvas');
            const message = document.getElementById('message');
            
            const url = urlInput.value.trim();
            
            // Clear previous messages
            message.innerHTML = '';
            
            if (!url) {
                showMessage('Please enter a URL!', 'error');
                return;
            }
            
            // Basic URL validation
            try {
                new URL(url);
            } catch (e) {
                // If it doesn't start with protocol, add https://
                if (!url.startsWith('http://') && !url.startsWith('https://')) {
                    urlInput.value = 'https://' + url;
                    generateQR();
                    return;
                } else {
                    showMessage('Please enter a valid URL!', 'error');
                    return;
                }
            }
            
            try {
                // Generate QR code
                currentQR = new QRious({
                    element: canvas,
                    value: url,
                    size: 250,
                    level: 'M',
                    background: 'white',
                    foreground: '#333333'
                });
                
                // Show QR container with animation
                qrContainer.classList.add('show');
                canvas.classList.add('pulse');
                
                showMessage('QR Code generated successfully! ðŸŽ‰', 'success');
                
                // Remove pulse animation after 2 seconds
                setTimeout(() => {
                    canvas.classList.remove('pulse');
                }, 2000);
                
            } catch (error) {
                showMessage('Error generating QR code. Please try again.', 'error');
            }
        }

        function showMessage(text, type) {
            const message = document.getElementById('message');
            message.innerHTML = `<div class="${type}">${text}</div>`;
            
            // Auto-clear success messages
            if (type === 'success') {
                setTimeout(() => {
                    message.innerHTML = '';
                }, 3000);
            }
        }

        function downloadQR() {
            if (!currentQR) {
                showMessage('Please generate a QR code first!', 'error');
                return;
            }
            
            const canvas = document.getElementById('qrCanvas');
            const link = document.createElement('a');
            link.download = 'qrcode.png';
            link.href = canvas.toDataURL();
            link.click();
            
            showMessage('QR code downloaded! ðŸ“¥', 'success');
        }

        async function copyQR() {
            if (!currentQR) {
                showMessage('Please generate a QR code first!', 'error');
                return;
            }
            
            try {
                const canvas = document.getElementById('qrCanvas');
                const blob = await new Promise(resolve => {
                    canvas.toBlob(resolve, 'image/png');
                });
                
                await navigator.clipboard.write([
                    new ClipboardItem({ 'image/png': blob })
                ]);
                
                showMessage('QR code copied to clipboard! ðŸ“‹', 'success');
            } catch (error) {
                showMessage('Copy to clipboard not supported in this browser.', 'error');
            }
        }

        // Allow Enter key to generate QR code
        document.getElementById('urlInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                generateQR();
            }
        });

        // Auto-focus on input
        window.addEventListener('load', function() {
            document.getElementById('urlInput').focus();
        });
    </script>
</body>
</html>
